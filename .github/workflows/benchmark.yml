name: Benchmark

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true


jobs:
  benchmark:
    strategy:
      matrix:
        include:
          - { version: 16, os: "ubuntu-latest" }
    runs-on: ${{ matrix.os }}
    env:
      VERSION: ${{ matrix.version }}
      OS: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'BeautyyuYanli/vector-db-benchmark'
      
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Copy Configs
        run: cp experiments/needs_editing/pgvector_rust_HNSW_single_node_laion-768-5m-ip.json experiments/configurations && cp experiments/needs_editing/pgvector_rust_HNSW_single_node_laion-768-5m-probability-ip.json experiments/configurations
      
      - name: Start Server
        env:
          GH_TOKEN: ${{ github.token }}
          POSTGRES_USER: root
          POSTGRES_PASSWORD: 123456
        run: |
          LATEST_STABLE_VERSION=$(gh release list --repo tensorchord/pgvecto.rs --exclude-drafts --exclude-pre-releases --limit 1 | awk '{print $3}')
          docker run --name pgvecto-rs-demo -p 5432:5432 -d tensorchord/pgvecto-rs:pg15-${LATEST_STABLE_VERSION}
      
      - name: Run Benchmark
        run: poetry run python run.py --engines "*pgvector_rust*"
      
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: results
          if-no-files-found: error
